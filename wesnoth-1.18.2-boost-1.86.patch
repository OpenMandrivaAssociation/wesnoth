diff -up wesnoth-1.18.2/src/server/common/server_base.cpp.omv~ wesnoth-1.18.2/src/server/common/server_base.cpp
--- wesnoth-1.18.2/src/server/common/server_base.cpp.omv~	2024-09-29 17:35:08.168228688 +0200
+++ wesnoth-1.18.2/src/server/common/server_base.cpp	2024-09-29 17:36:47.289305760 +0200
@@ -81,10 +81,10 @@ server_base::server_base(unsigned short
 void server_base::start_server()
 {
 	boost::asio::ip::tcp::endpoint endpoint_v6(boost::asio::ip::tcp::v6(), port_);
-	boost::asio::spawn(io_service_, [this, endpoint_v6](boost::asio::yield_context yield) { serve(yield, acceptor_v6_, endpoint_v6); });
+	boost::asio::spawn(io_service_, [this, endpoint_v6](boost::asio::yield_context yield) { serve(yield, acceptor_v6_, endpoint_v6); }, [](std::exception_ptr e) { if(e) std::rethrow_exception(e); });
 
 	boost::asio::ip::tcp::endpoint endpoint_v4(boost::asio::ip::tcp::v4(), port_);
-	boost::asio::spawn(io_service_, [this, endpoint_v4](boost::asio::yield_context yield) { serve(yield, acceptor_v4_, endpoint_v4); });
+	boost::asio::spawn(io_service_, [this, endpoint_v4](boost::asio::yield_context yield) { serve(yield, acceptor_v4_, endpoint_v4); }, [](std::exception_ptr e) { if(e) std::rethrow_exception(e); });
 
 	handshake_response_ = htonl(42);
 
@@ -122,7 +122,7 @@ void server_base::serve(boost::asio::yie
 	}
 
 	if(accepting_connections()) {
-		boost::asio::spawn(io_service_, [this, &acceptor, endpoint](boost::asio::yield_context yield) { serve(yield, acceptor, endpoint); });
+		boost::asio::spawn(io_service_, [this, &acceptor, endpoint](boost::asio::yield_context yield) { serve(yield, acceptor, endpoint); }, [](std::exception_ptr e) { if(e) std::rethrow_exception(e); });
 	} else {
 		return;
 	}
@@ -566,7 +566,8 @@ template<class SocketPtr> void server_ba
 	boost::asio::spawn(
 		io_service_, [this, doc_ptr = doc.clone(), socket](boost::asio::yield_context yield) mutable {
 			send_doc_queued(socket, doc_ptr, yield);
-		}
+		},
+		[](std::exception_ptr e) { if(e) std::rethrow_exception(e); }
 	);
 }
 
diff -up wesnoth-1.18.2/src/server/wesnothd/server.cpp.omv~ wesnoth-1.18.2/src/server/wesnothd/server.cpp
--- wesnoth-1.18.2/src/server/wesnothd/server.cpp.omv~	2024-09-29 17:25:27.681930827 +0200
+++ wesnoth-1.18.2/src/server/wesnothd/server.cpp	2024-09-29 17:34:47.037999124 +0200
@@ -668,12 +668,12 @@ void server::refresh_tournaments(const b
 
 void server::handle_new_client(socket_ptr socket)
 {
-	boost::asio::spawn(io_service_, [socket, this](boost::asio::yield_context yield) { login_client(yield, socket); });
+	boost::asio::spawn(io_service_, [socket, this](boost::asio::yield_context yield) { login_client(yield, socket); }, [](std::exception_ptr e) { if(e) std::rethrow_exception(e); });
 }
 
 void server::handle_new_client(tls_socket_ptr socket)
 {
-	boost::asio::spawn(io_service_, [socket, this](boost::asio::yield_context yield) { login_client(yield, socket); });
+	boost::asio::spawn(io_service_, [socket, this](boost::asio::yield_context yield) { login_client(yield, socket); }, [](std::exception_ptr e) { if(e) std::rethrow_exception(e); });
 }
 
 template<class SocketPtr>
@@ -773,7 +773,8 @@ void server::login_client(boost::asio::y
 			default_max_messages_,
 			default_time_period_,
 			is_moderator
-		}](boost::asio::yield_context yield) { handle_player(yield, socket, new_player); }
+		}](boost::asio::yield_context yield) { handle_player(yield, socket, new_player); },
+		[](std::exception_ptr e) { if(e) std::rethrow_exception(e); }
 	);
 
 	LOG_SERVER << log_address(socket) << "\t" << username << "\thas logged on"
